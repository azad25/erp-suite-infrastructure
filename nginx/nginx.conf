user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging (optimized for performance)
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main buffer=64k flush=5s;

    # Performance optimizations
    sendfile on;
    sendfile_max_chunk 1m;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 75;
    keepalive_requests 1000;
    types_hash_max_size 4096;
    server_names_hash_bucket_size 128;
    client_max_body_size 100M;
    
    # Advanced buffer optimizations
    client_body_buffer_size 256k;
    client_header_buffer_size 4k;
    large_client_header_buffers 8 8k;
    output_buffers 2 64k;
    postpone_output 1460;
    
    # Additional performance settings
    reset_timedout_connection on;
    server_tokens off;
    
    # Timeouts (optimized)
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    
    # Open file cache (enhanced)
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Enhanced Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        application/rss+xml
        application/xhtml+xml
        application/x-font-ttf
        application/x-web-app-manifest+json
        font/opentype
        image/svg+xml
        image/x-icon
        text/x-component;

    # Rate limiting (optimized)
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;

    # DNS resolver for dynamic upstream resolution
    resolver 127.0.0.11 valid=30s;

    # Only include upstreams for services that are actually running
    upstream api_gateway_backend {
        server api-gateway:8000 max_fails=3 fail_timeout=30s;
        keepalive 64;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }

    upstream frontend_backend {
        server erp-frontend:3000 max_fails=3 fail_timeout=30s;
        keepalive 64;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }

    upstream auth_service_backend {
        server auth-service:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }

    # HTTP server block (redirect to HTTPS in production)
    server {
        listen 80 default_server;
        server_name _;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'" always;

        # Health check endpoint (MUST come before other location blocks)
        location = /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Nginx status endpoint (MUST come before other location blocks)
        location = /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.20.0.0/16;  # Docker network
            allow 10.0.0.0/8;     # Additional Docker networks
            deny all;
        }

        # Static assets caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://frontend_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cache static assets
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Cache-Status "STATIC";
            
            # Optimize proxy settings
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }

        # Next.js static files
        location /_next/static/ {
            proxy_pass http://frontend_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            
            # Long cache for Next.js static files
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Cache-Status "NEXTJS-STATIC";
        }

        # Next.js webpack HMR (Hot Module Replacement) - WebSocket support
        location /_next/webpack-hmr {
            proxy_pass http://frontend_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # WebSocket specific settings
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            proxy_connect_timeout 10s;
            
            # Disable buffering for real-time communication
            proxy_buffering off;
            proxy_cache off;
        }

        # GraphQL API - routed through API Gateway
        location /graphql {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://api_gateway_backend/graphql;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Optimize for GraphQL
            proxy_buffering on;
            proxy_buffer_size 64k;
            proxy_buffers 8 64k;
            proxy_read_timeout 30s;
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
        }

        # GraphQL Playground - routed through API Gateway
        location /playground {
            proxy_pass http://api_gateway_backend/playground;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # API Gateway - optimized for backend services (API endpoints only)
        location ~ ^/api/v1/(auth|logs|crm|hrm|finance|inventory|projects|ai|integration)/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://api_gateway_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Optimize for API calls
            proxy_buffering on;
            proxy_buffer_size 64k;
            proxy_buffers 8 64k;
            proxy_read_timeout 30s;
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
        }

        # API Gateway v1 routes - route to API Gateway
        location ~ ^/api/v1/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://api_gateway_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Optimize for API calls
            proxy_buffering on;
            proxy_buffer_size 64k;
            proxy_buffers 8 64k;
            proxy_read_timeout 30s;
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
        }

        # Next.js API routes (handled by frontend) - only for non-v1 routes
        location ~ ^/api/(?!v1/) {
            proxy_pass http://frontend_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300;
            proxy_connect_timeout 75;
        }

        # WebSocket - optimized for real-time connections
        location ~ ^/ws(?:/chat)?/?$ {
            proxy_pass http://api_gateway_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific timeouts
            proxy_read_timeout 300s;        # 5 minutes
            proxy_send_timeout 300s;        # 5 minutes
            proxy_connect_timeout 10s;      # Quick connection establishment
            
            # Disable buffering for real-time communication
            proxy_buffering off;
            proxy_cache off;
        }

        # AI WebSocket proxy - route to API Gateway WebSocket handler
        location ~ ^/ws/chat/?$ {
            proxy_pass http://api_gateway_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific timeouts
            proxy_read_timeout 300s;        # 5 minutes
            proxy_send_timeout 300s;        # 5 minutes
            proxy_connect_timeout 10s;      # Quick connection establishment
            
            # Disable buffering for real-time communication
            proxy_buffering off;
            proxy_cache off;
        }

        # Frontend (Next.js) - optimized (MUST be last catch-all)
        location / {
            proxy_pass http://frontend_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Optimize proxy settings
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            proxy_read_timeout 30s;
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}