user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    
    # Buffer optimizations
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;
    
    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    
    # Open file cache
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Enhanced Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        application/rss+xml
        application/xhtml+xml
        application/x-font-ttf
        application/x-web-app-manifest+json
        font/opentype
        image/svg+xml
        image/x-icon
        text/x-component;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;

    # DNS resolver for dynamic upstream resolution
    resolver 127.0.0.11 valid=30s;

    # Optimized upstream definitions
    # upstream graphql_backend {
    #     server graphql-gateway:4000 max_fails=3 fail_timeout=30s;
    #     keepalive 64;
    #     keepalive_requests 1000;
    #     keepalive_timeout 60s;
    # }

    upstream api_gateway_backend {
        server erp-suite-api-gateway:8000 max_fails=3 fail_timeout=30s;
        keepalive 64;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }

    # upstream websocket_backend {
    #     server websocket-server:3001 max_fails=3 fail_timeout=30s;
    #     keepalive 32;
    #     keepalive_requests 1000;
    #     keepalive_timeout 60s;
    # }

    upstream frontend_backend {
        server erp-frontend:3000 max_fails=3 fail_timeout=30s;
        keepalive 64;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }

    upstream auth_service_backend {
        server auth-service:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }



    # Development tools upstreams
    upstream pgadmin_backend {
        server pgadmin:80;
        keepalive 32;
    }

    upstream mongo_express_backend {
        server mongo-express:8081;
        keepalive 32;
    }

    upstream redis_commander_backend {
        server redis-commander:8081;
        keepalive 32;
    }

    upstream kafka_ui_backend {
        server kafka-ui:8080;
        keepalive 32;
    }

    upstream kibana_backend {
        server kibana:5601;
        keepalive 32;
    }

    upstream consul_backend {
        server grpc-registry:8500;
        keepalive 32;
    }

    # Main server block
    server {
        listen 80;
        server_name 192.168.0.118;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'" always;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Static assets caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://frontend_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cache static assets
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Cache-Status "STATIC";
            
            # Optimize proxy settings
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }

        # Next.js static files
        location /_next/static/ {
            proxy_pass http://frontend_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            
            # Long cache for Next.js static files
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Cache-Status "NEXTJS-STATIC";
        }

        # Frontend (Next.js) - optimized
        location / {
            proxy_pass http://frontend_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Optimize proxy settings
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            proxy_read_timeout 30s;
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
        }

        # GraphQL API - routed through API Gateway
        location /graphql {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://api_gateway_backend/graphql;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Optimize for GraphQL
            proxy_buffering on;
            proxy_buffer_size 64k;
            proxy_buffers 8 64k;
            proxy_read_timeout 30s;
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
        }

        # GraphQL Playground - routed through API Gateway
        location /playground {
            proxy_pass http://api_gateway_backend/playground;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Next.js API routes (handled by frontend)
        location /api/ {
            proxy_pass http://frontend_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300;
            proxy_connect_timeout 75;
        }

        # API Gateway - optimized for backend services
        location ~ ^/(auth|logs|crm|hrm|finance|inventory|projects|ai|integration)/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://api_gateway_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Optimize for API calls
            proxy_buffering on;
            proxy_buffer_size 64k;
            proxy_buffers 8 64k;
            proxy_read_timeout 30s;
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
        }

        # WebSocket - optimized for real-time connections
        location ~ ^/ws/?$ {
            proxy_pass http://api_gateway_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific timeouts
            proxy_read_timeout 300s;        # 5 minutes
            proxy_send_timeout 300s;        # 5 minutes
            proxy_connect_timeout 10s;      # Quick connection establishment
            
            # Disable buffering for real-time communication
            proxy_buffering off;
            proxy_cache off;
            
            # Keep connection alive
            proxy_set_header Connection "upgrade";
            proxy_set_header Upgrade $http_upgrade;
            
            # Handle WebSocket close frames properly
            proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
            proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
            proxy_set_header Sec-WebSocket-Protocol $http_sec_websocket_protocol;
            proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;
        }

        # Development Tools (protected by basic auth)
        # Simple approach: proxy everything under /admin/ to respective services
        
        # pgAdmin - PostgreSQL management
        location ~ ^/admin/pgadmin/(.*)$ {
            proxy_pass http://pgadmin_backend/$1$is_args$args;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Script-Name /admin/pgadmin;
            proxy_redirect ~^/(.*)$ /admin/pgadmin/$1;
        }

        # Mongo Express - MongoDB management  
        location ~ ^/admin/mongo/(.*)$ {
            # auth_basic "Admin Area";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            
            proxy_pass http://mongo_express_backend/$1$is_args$args;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect ~^/(.*)$ /admin/mongo/$1;
        }

        # Redis Commander - Redis management
        location ~ ^/admin/redis/(.*)$ {
            # auth_basic "Admin Area";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            
            proxy_pass http://redis_commander_backend/$1$is_args$args;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect ~^/(.*)$ /admin/redis/$1;
        }

        # Kafka UI - Kafka management
        location ~ ^/admin/kafka/(.*)$ {
            # auth_basic "Admin Area";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            
            proxy_pass http://kafka_ui_backend/$1$is_args$args;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect ~^/(.*)$ /admin/kafka/$1;
        }

        # Kibana - Elasticsearch UI
        location ~ ^/admin/kibana/(.*)$ {
            # auth_basic "Admin Area";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            
            proxy_pass http://kibana_backend/$1$is_args$args;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_redirect ~^/(.*)$ /admin/kibana/$1;
        }

        # Consul - Service Registry UI
        location ~ ^/admin/consul/(.*)$ {
            # auth_basic "Admin Area";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            
            proxy_pass http://grpc-registry_backend/ui/$1$is_args$args;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect ~^/ui/(.*)$ /admin/consul/$1;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # HTTPS server (commented out - uncomment and add SSL certificates)
    # server {
    #     listen 443 ssl http2;
    #     server_name 192.168.0.118;
    #     
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     
    #     # SSL configuration
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     
    #     # Include the same location blocks as above
    # }
} 