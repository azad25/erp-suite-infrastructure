version: '3.8'

services:
  # ============================================================================
  # DATABASES
  # ============================================================================
  
  # PostgreSQL - Primary relational database (Optimized for low resource usage)
  postgres:
    extends:
      file: docker-compose.base.yml
      service: postgres

  # MongoDB - Analytics, logs, AI conversations (Optimized for low resource usage)
  mongodb:
    extends:
      file: docker-compose.base.yml
      service: mongodb

  # Redis - Cache, sessions, queues (Optimized for low resource usage)
  redis:
    extends:
      file: docker-compose.base.yml
      service: redis

  # Qdrant - Vector database for AI/RAG (Optimized for low resource usage)
  qdrant:
    extends:
      file: docker-compose.base.yml
      service: qdrant

  # ============================================================================
  # MESSAGE BROKERS
  # ============================================================================

  # Kafka - Event streaming (KRaft mode - optimized for low resource usage)
  kafka:
    extends:
      file: docker-compose.base.yml
      service: kafka

  # ============================================================================
  # SEARCH & ANALYTICS
  # ============================================================================

  # Elasticsearch - Full-text search (optimized for low resource usage)
  elasticsearch:
    extends:
      file: docker-compose.base.yml
      service: elasticsearch

  # Kibana - Elasticsearch UI (optimized for low resource usage)
  kibana:
    extends:
      file: docker-compose.base.yml
      service: kibana

  # ============================================================================
  # API GATEWAY & COMMUNICATION LAYER
  # ============================================================================

  # gRPC Service Registry & Load Balancer (Consul - optimized for low resource usage)
  grpc-registry:
    extends:
      file: docker-compose.base.yml
      service: grpc-registry

  # NGINX Reverse Proxy - Main entry point for external traffic
  nginx-proxy:
    extends:
      file: docker-compose.base.yml
      service: nginx-proxy

  # ============================================================================
  # SIMPLE LOGGING
  # ============================================================================
  # Note: Monitoring services (Prometheus, Grafana, Jaeger) have been removed
  # Only keeping Kibana for simple log visualization

  # ============================================================================
  # DEVELOPMENT TOOLS
  # ============================================================================

  # Adminer - Lightweight PostgreSQL management (replaces pgAdmin for lower resource usage)
  adminer:
    extends:
      file: docker-compose.devtools.yml
      service: adminer

  # Mongo Express - MongoDB management (optimized for low resource usage)
  mongo-express:
    extends:
      file: docker-compose.devtools.yml
      service: mongo-express

  # Redis Commander - Redis management (optimized for low resource usage)
  redis-commander:
    extends:
      file: docker-compose.devtools.yml
      service: redis-commander

  # Kafka UI - Kafka management (KRaft mode compatible, optimized for low resource usage)
  kafka-ui:
    extends:
      file: docker-compose.devtools.yml
      service: kafka-ui

  # ============================================================================
  # APPLICATION SERVICES (Full Stack Profile)
  # ============================================================================

  # Auth Service (Go) - Authentication and Authorization (optimized for microservice architecture)
  auth-service:
    extends:
      file: docker-compose.services.yml
      service: auth-service

  # Subscription Service (Go) - Subscription and Billing Management
  subscription-service:
    extends:
      file: docker-compose.services.yml
      service: subscription-service

  # API Gateway - Main API Gateway (optimized for microservice architecture)
  api-gateway:
    extends:
      file: docker-compose.services.yml
      service: api-gateway

  # AI Copilot Service - AI-powered ERP assistance with Ollama integration
  ai-copilot:
    extends:
      file: docker-compose.services.yml
      service: ai-copilot

  # Next.js Frontend - Main Web Application (optimized for low resource usage)
  erp-frontend:
    extends:
      file: docker-compose.services.yml
      service: erp-frontend

  # Log Service (optimized for low resource usage)
  log-service:
    extends:
      file: docker-compose.services.yml
      service: log-service

volumes:
  postgres_data:
  mongodb_data:
  redis_data:
  qdrant_data:
  kafka_data:
  elasticsearch_data:
  elasticsearch_config:
  pgadmin_data:
  consul_data:
  frontend_node_modules:
  frontend_next:

networks:
  erp-network:
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET:-172.20.0.0/16}
