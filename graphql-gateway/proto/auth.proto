syntax = "proto3";

package auth;

service AuthService {
  // User management
  rpc GetUser(GetUserRequest) returns (User);
  rpc GetUsersByIds(GetUsersByIdsRequest) returns (GetUsersByIdsResponse);
  rpc GetUserProfilesByIds(GetUserProfilesByIdsRequest) returns (GetUserProfilesByIdsResponse);
  rpc GetUserPermissionsByIds(GetUserPermissionsByIdsRequest) returns (GetUserPermissionsByIdsResponse);
  rpc CreateUser(CreateUserRequest) returns (User);
  rpc UpdateUser(UpdateUserRequest) returns (User);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  
  // Authentication
  rpc ValidateToken(ValidateTokenRequest) returns (ValidateTokenResponse);
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc Logout(LogoutRequest) returns (LogoutResponse);
  
  // Authorization
  rpc CheckPermission(CheckPermissionRequest) returns (CheckPermissionResponse);
  rpc GetUserRoles(GetUserRolesRequest) returns (GetUserRolesResponse);
  
  // Health check
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);
}

// Messages
message User {
  string id = 1;
  string email = 2;
  string name = 3;
  string role = 4;
  string avatar = 5;
  bool is_active = 6;
  int64 last_login = 7;
  int64 created_at = 8;
  int64 updated_at = 9;
  string organization_id = 10;
}

message UserProfile {
  string id = 1;
  string user_id = 2;
  string first_name = 3;
  string last_name = 4;
  string phone = 5;
  string department = 6;
  string position = 7;
  string bio = 8;
}

message Permission {
  string id = 1;
  string name = 2;
  string resource = 3;
  string action = 4;
}

message Organization {
  string id = 1;
  string name = 2;
  string domain = 3;
  string plan = 4;
  string settings = 5; // JSON string
  int64 created_at = 6;
}

// Request messages
message GetUserRequest {
  string id = 1;
}

message GetUsersByIdsRequest {
  repeated string ids = 1;
}

message GetUsersByIdsResponse {
  repeated User items = 1;
}

message GetUserProfilesByIdsRequest {
  repeated string ids = 1;
}

message GetUserProfilesByIdsResponse {
  repeated UserProfile items = 1;
}

message GetUserPermissionsByIdsRequest {
  repeated string ids = 1;
}

message GetUserPermissionsByIdsResponse {
  map<string, UserPermissions> permissions = 1;
}

message UserPermissions {
  repeated Permission permissions = 1;
}

message CreateUserRequest {
  string email = 1;
  string name = 2;
  string password = 3;
  string role = 4;
  string organization_id = 5;
}

message UpdateUserRequest {
  string id = 1;
  string name = 2;
  string role = 3;
  bool is_active = 4;
}

message DeleteUserRequest {
  string id = 1;
}

message DeleteUserResponse {
  bool success = 1;
}

message ValidateTokenRequest {
  string token = 1;
}

message ValidateTokenResponse {
  bool valid = 1;
  User user = 2;
  string error = 3;
}

message RefreshTokenRequest {
  string refresh_token = 1;
}

message RefreshTokenResponse {
  string access_token = 1;
  string refresh_token = 2;
  int64 expires_in = 3;
}

message LoginRequest {
  string email = 1;
  string password = 2;
  string organization_domain = 3;
}

message LoginResponse {
  string access_token = 1;
  string refresh_token = 2;
  User user = 3;
  int64 expires_in = 4;
}

message LogoutRequest {
  string token = 1;
}

message LogoutResponse {
  bool success = 1;
}

message CheckPermissionRequest {
  string user_id = 1;
  string resource = 2;
  string action = 3;
}

message CheckPermissionResponse {
  bool allowed = 1;
}

message GetUserRolesRequest {
  string user_id = 1;
}

message GetUserRolesResponse {
  repeated string roles = 1;
}

message HealthCheckRequest {}

message HealthCheckResponse {
  string status = 1;
  int64 timestamp = 2;
}